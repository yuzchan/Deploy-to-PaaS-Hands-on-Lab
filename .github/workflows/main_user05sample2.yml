# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

on:
  workflow_dispatch:
    inputs:
      resourceGroup:
        description: 'rg-user04'
        required: true
        type: string
      containerApp:
        description: 'managedEnvironment-rguser04-1'
        required: true
        type: string


jobs:
  build:
    runs-on: ubuntu-latest
    env:
      APP_PATH: 'src/Java/webapp-java'

    steps:
      - uses: actions/checkout@v2

      - name: Set up Java version
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Build with Maven
        run: |
          cd ${{ env.APP_PATH }}
          mvn clean install package
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: java-app
          path: '${{ github.workspace }}/${{ env.APP_PATH }}/target/*.jar'

  push:
    runs-on: ubuntu-latest
    needs: build
  
    steps:
      - uses: actions/checkout@v2

      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: java-app
          path: 'target'
      
      - name: Login via Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGINSERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      
      - name: Docker build and push
        run: |
          docker build . -t ${{ secrets.REGISTRY_LOGINSERVER }}/app:${{ github.sha }} -f ./.docker/Java/dockerfile
          docker push ${{ secrets.REGISTRY_LOGINSERVER }}/app:${{ github.sha }}
  deploy:
    runs-on: ubuntu-latest
    needs: push

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - name: Deploy to containerapp
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp registry set -n ${{ github.event.inputs.containerApp }} -g ${{ github.event.inputs.resourceGroup }} --server ${{ secrets.REGISTRY_LOGINSERVER }} --username  ${{ secrets.REGISTRY_USERNAME }} --password ${{ secrets.REGISTRY_PASSWORD }}
            az containerapp update -n ${{ github.event.inputs.containerApp }} -g ${{ github.event.inputs.resourceGroup }} --image ${{ secrets.REGISTRY_LOGINSERVER }}/app:${{ github.sha }}